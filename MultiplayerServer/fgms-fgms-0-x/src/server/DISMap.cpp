#include "DISMap.h"

//////////////////////////////////////////////////////////////////////
/**
 *
 * construct the map and initialize mutex
 */
PDUList::PDUList
()
{
	pthread_mutex_init ( &m_MapMutex, 0 );
}
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/**
 *
 * destructor calls clear
 */
PDUList::~PDUList
()
{
	Clear ();
}
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/**
 *
 * Delete all entries of the map
 */
void PDUList::Clear
()
{
	Lock ();
	clear();
	Unlock ();
}
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/**
 *
 * Set a mutex lock on the map, so concurrent operations are blocked
 * until the lock is released.
 * @see Unlock()
 */
void PDUList::Lock
()
{
	pthread_mutex_lock ( & m_MapMutex );
}
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/**
 *
 * Release the mutex lock
 */
void PDUList::Unlock
()
{
	pthread_mutex_unlock ( & m_MapMutex );
}
//////////////////////////////////////////////////////////////////////